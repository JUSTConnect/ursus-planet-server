# Generated by Django 4.2.9 on 2024-02-19 01:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tasks', '0018_rename_task_account_notification_is_active_platformtaskssettings_task_avatar_nft_is_active_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformTaskLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('got', models.BooleanField(default=False)),
                ('reward', models.PositiveIntegerField(default=0)),
                ('task', models.CharField(choices=[('task_social_x', 'Task - connect X account'), ('task_social_github', 'Task - connect GitHub account'), ('task_social_discord', 'Task - connect Discord account'), ('task_social_telegram', 'Task - connect Telegram account'), ('task_email', 'Task - set email'), ('task_username', 'Task - set username'), ('task_domain_id', 'Task - set domain id username'), ('task_avatar', 'Task - set avatar'), ('task_avatar_nft', 'Task - set avatar from NFT'), ('task_avatar_nft_ursas', 'Task - set avatar from NFT by Ursas collection'), ('task_wallet', 'Task - add wallet'), ('task_chain', 'Task - add chain'), ('task_referral_self', 'Task - set referral code'), ('task_cabinet_notification_account', 'Task - enable cabinet account notifications'), ('task_cabinet_notification_email', 'Task - enable cabinet email notifications')], max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='taskavatarlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskchainlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskdomainidlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskemaillog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskemailnotificationlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='tasknftavatarlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskreferralselflog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='tasksocialdiscordlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='tasksocialgithublog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='tasksocialtelegramlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='tasksocialxlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskursascollectionnftavatarlog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskusernamelog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='taskwalletlog',
            name='user',
        ),
        migrations.DeleteModel(
            name='TaskAccountNotificationLog',
        ),
        migrations.DeleteModel(
            name='TaskAvatarLog',
        ),
        migrations.DeleteModel(
            name='TaskChainLog',
        ),
        migrations.DeleteModel(
            name='TaskDomainIdLog',
        ),
        migrations.DeleteModel(
            name='TaskEmailLog',
        ),
        migrations.DeleteModel(
            name='TaskEmailNotificationLog',
        ),
        migrations.DeleteModel(
            name='TaskNftAvatarLog',
        ),
        migrations.DeleteModel(
            name='TaskReferralSelfLog',
        ),
        migrations.DeleteModel(
            name='TaskSocialDiscordLog',
        ),
        migrations.DeleteModel(
            name='TaskSocialGithubLog',
        ),
        migrations.DeleteModel(
            name='TaskSocialTelegramLog',
        ),
        migrations.DeleteModel(
            name='TaskSocialXLog',
        ),
        migrations.DeleteModel(
            name='TaskUrsasCollectionNftAvatarLog',
        ),
        migrations.DeleteModel(
            name='TaskUsernameLog',
        ),
        migrations.DeleteModel(
            name='TaskWalletLog',
        ),
    ]
